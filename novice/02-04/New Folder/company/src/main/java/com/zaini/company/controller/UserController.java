package com.zaini.company.controller;

import java.util.List;

import com.zaini.company.model.User;
import com.zaini.company.repository.UserRepository;



import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
// import org.springframework.web.bind.annotation.RestController;

import org.springframework.http.HttpStatus;
import org.springframework.web.server.ResponseStatusException;


@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class UserController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private UserRepository userRepository;

//   @PostMapping(path="/add") // Map ONLY POST Requests
//   public @ResponseBody String addNewUser (@RequestParam String name
//       , @RequestParam String email) {

//     User n = new User();
//     n.setName(name);
//     n.setEmail(email);
//     userRepository.save(n);
//     return "Saved";
//   }

@PostMapping(path="/add") // Map ONLY POST Requests
public @ResponseBody User addNewUser(@RequestBody User user) {  
  return userRepository.save(user);
}

//   @GetMapping(path="/all")
//   public @ResponseBody Iterable<User> getAllUsers() {
//     return userRepository.findAll();
//   }

@GetMapping(path="/all")
public @ResponseBody Iterable<User> getAllUsers() {
  return userRepository.findAll();
}
@GetMapping("/user/{id}")
    User userById(@PathVariable Long id){
        return userRepository.findById(id).orElseThrow(() -> new ResponseStatusException(
                HttpStatus.NOT_FOUND));
    }
}
    
